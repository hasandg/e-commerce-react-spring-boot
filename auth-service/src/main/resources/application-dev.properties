# Dev profile configuration with Docker container names

# Server Configuration
server.port=8081

# Spring Application Configuration
spring.application.name=auth-service
spring.cloud.config.enabled=false
spring.cloud.config.uri=http://config-server:8888
spring.config.import=optional:configserver:
spring.main.allow-bean-definition-overriding=true

# Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/ecommerce
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Security Configuration
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.keycloak.client-id=auth-service
spring.security.oauth2.client.registration.keycloak.client-secret=your-client-secret
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,roles

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Keycloak Configuration
keycloak.auth-server-url=http://keycloak:9090
keycloak.realm=ecommerce
keycloak.client-id=auth-service
keycloak.client-secret=your-client-secret
keycloak.resource=auth-service
keycloak.public-client=false
keycloak.use-resource-role-mappings=true
keycloak.principal-attribute=preferred_username
keycloak.ssl-required=external
keycloak.confidential-port=0
keycloak.verify-token-audience=true
keycloak.credentials.secret=your-client-secret

# JWT Configuration
jwt.secret=hfgry463hf746hf573ydh475fhy5739hfgry463hf746hf573ydh475fhy5739hfgry463hf746hf573ydh475fhy5739
jwt.expiration=86400000

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.docExpansion=none

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
